name: Build Pipeline

on:
  push:
    branches:

      - main
      - "develop"
      # For testing purposes push in any branch
      # - "**"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APP_NAME: challenge-devops
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ASSUME_ROLE_NAME: gbl-experiments-github-actions-iam-role
      AWS_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extra variables
        id: vars
        run: |
          echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ASSUME_ROLE_NAME }}
          role-session-name: gha-challenge-devops-build
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          tags: |
            latest
            ${{ steps.vars.outputs.IMAGE_TAG }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY:  ${{ env.APP_NAME }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./challenge-devops
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
