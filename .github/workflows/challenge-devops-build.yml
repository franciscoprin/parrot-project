# .github/workflows/build.yml

name: Build Pipeline

on:
  push:
    branches:
      # - main
      # For testing purposes push in any branch
      - feature/create-pipeline-challenge-devops-build

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest

# arn:aws:iam::270340338153:role/ue1-experiments-github-actions-ecr-push-role

    env:
      APP_NAME: challenge-devops
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ASSUME_ROLE_NAME: ue1-experiments-github-actions-ecr-push-role
      AWS_REGION: us-east-1
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      ###########
      ###########
      ###########
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::{{ env.AWS_ACCOUNT_ID }}:role/{{ env.AWS_ASSUME_ROLE_NAME }}
          role-session-name: gha-challenge-devops-build
          aws-region: ${{ env.AWS_REGION }}

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_MGMT_ECR_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_MGMT_ECR_KEY }}
      #     aws-region: ${{ env.AWS_REGION }}
      ###########
      ###########
      ###########

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2


      ###########
      ###########
      ###########

      # - name: Build, tag, and push docker image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ env.APP_NAME }}
      #     IMAGE_TAG: ${{ env.IMAGE_TAG }}
      #   run: |
      #     cd ./${{ env.APP_NAME }}
      #     docker buildx build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Image digest
      #   run: echo ${{ steps.build-image.outputs.digest }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          tags: |
            latest
            ${{ github.sha }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY:  ${{ env.APP_NAME }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./challenge-devops
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false

      ###########
      ###########
      ###########
